local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local InsertService = game:GetService("InsertService")

local NPC_MODEL_ID = 4662240519
local SPAWN_DISTANCE = 10 -- プレイヤーからNPCが出現する距離

local function spawnNPC(player)
    if not player or not player.Character then return end

    local character = player.Character
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end

    local playerPosition = humanoidRootPart.Position

    local npcModel = nil
    local success = pcall(function()
        npcModel = InsertService:LoadAsset(NPC_MODEL_ID)
    end)

    if not success or not npcModel or npcModel.ClassName ~= "Model" then
        warn("Failed to load NPC model ID: " .. NPC_MODEL_ID)
        if npcModel then npcModel:Destroy() end
        return
    end

    npcModel.Parent = workspace

    local spawnPosition = playerPosition + humanoidRootPart.CFrame.LookVector * SPAWN_DISTANCE
    spawnPosition = Vector3.new(spawnPosition.X, spawnPosition.Y + 3, spawnPosition.Z)

    if npcModel:FindFirstChild("HumanoidRootPart") then
        npcModel:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(spawnPosition)
    elseif npcModel.PrimaryPart then
        npcModel.PrimaryPart.CFrame = CFrame.new(spawnPosition)
    else
        local modelCenter = npcModel:GetBoundingBox().p
        local offset = spawnPosition - modelCenter
        for _, part in ipairs(npcModel:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CFrame = part.CFrame + offset
            end
        end
    end
end

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        spawnNPC(player)
    end)
end)